!function () { CKEDITOR.plugins.add("pasteimage", { lang: "en,zh,zh-cn", requires: "uploadwidget", onLoad: function () { CKEDITOR.addCss(".cke_upload_uploading img{opacity: 0.3}") }, init: function (b) { if (CKEDITOR.scriptLoader.load(CKEDITOR.getUrl("plugins/pasteimage/filesize.js")), CKEDITOR.plugins.clipboard.isFileApiSupported) { var c = CKEDITOR.fileTools, d = c.getUploadUrl(b.config, "image") || ""; d && (c.addUploadWidget(b, "pasteimage", { supportedTypes: /image\/(jpeg|png|gif|bmp)/, uploadUrl: d, fileToElement: function () { var b = new CKEDITOR.dom.element("img"); return b.setAttribute("src", a), b }, parts: { img: "img" }, onUploading: function (a) { this.parts.img.setAttribute("src", a.data) }, onUploaded: function (a) { var b = this.parts.img.$, c = a.responseData.width || b.naturalWidth, d = a.responseData.height || b.naturalHeight; this.replaceWith('<img src="' + a.url + '" ' + 'width="' + c + '" ' + 'height="' + d + '">') } }), b.on("paste", function (a) { var h, i, j, e, f, g, k, l, m; if (a.data.dataValue.match(/<img[\s\S]+data:/i)) { for (e = a.data, f = document.implementation.createHTMLDocument(""), g = new CKEDITOR.dom.element(f.body), g.data("cke-editable", 1), g.appendHtml(e.dataValue), h = g.find("img"), j = 0; j < h.count(); j++)i = h.getItem(j), k = i.getAttribute("src") && "data:" == i.getAttribute("src").substring(0, 5), l = null === i.data("cke-realelement"), k && l && !i.data("cke-upload-id") && !i.isReadOnly(1) && (m = b.uploadRepository.create(i.getAttribute("src")), m.upload(d), c.markElement(i, "pasteimage", m.id), c.bindNotifications(b, m)); e.dataValue = g.getHtml() } }), b.on("fileUploadRequest", function (a) { var c = b.lang.pasteimage, d = a.data.fileLoader, e = b.config.fileSingleSizeLimit || 10, f = 1024 * 1024 * e; d.file.size > f && (alert(c.single_file_max_size_tip + filesize(e)), a.cancel()), a.data.requestData.uploadMode = "paste" })) } } }); var a = "" }();